from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
import yaml
from datetime import datetime

# If modifying these scopes, delete the file token.json.
SCOPES = ['https://www.googleapis.com/auth/documents']

def load_config(filepath="config.yaml"):
    with open(filepath, 'r') as f:
        return yaml.safe_load(f)

def export_to_google_docs(report_content, credentials_file, document_name_format="Weekly Market Insights Radar - {date}"):
    creds = None
    try:
        creds = Credentials.from_service_account_file(credentials_file, scopes=SCOPES)
    except Exception as e:
        print(f"Error loading Google Docs credentials: {e}")
        return None

    try:
        service = build('docs', 'v1', credentials=creds)
        document_name = document_name_format.format(date=datetime.now().strftime("%Y-%m-%d"))
        document = {'title': document_name}
        doc = service.documents().create(body=document).execute()
        document_id = doc['documentId']
        print(f"Created new Google Doc: https://docs.google.com/document/d/{document_id}/edit")

        requests = [{
            'insertText': {
                'location': {
                    'index': 1
                },
                'text': report_content
            }
        }]
        service.documents().batchUpdate(documentId=document_id, body={'requests': requests}).execute()
        return document_id

    except Exception as e:
        print(f"An error occurred exporting to Google Docs: {e}")
        return None

if __name__ == '__main__':
    mock_report = "This is a sample market insights report generated by the tool."
    config = load_config()
    credentials_file = config.get('google_docs', {}).get('credentials_file')
    document_name_format = config.get('google_docs', {}).get('document_name', "Weekly Market Insights Radar - {date}")

    if credentials_file:
        export_to_google_docs(mock_report, credentials_file, document_name_format)
    else:
        print("Google Docs credentials file not found in config.")